name: Deploy

on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.affected-projects.outputs.affected }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout main
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup global dependencies
        run: npm install --global pnpm ts-node
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup dependencies
        run: pnpm install --frozen-lockfile

      - name: Get affected projects
        id: affected-projects
        run: |
          PROJECTS="$(ts-node ci/affectedProjects.ts)"
          echo ::set-output name=affected::${PROJECTS}
          echo Affected projects: $PROJECTS

      - name: Deploy server app
        if: contains(toJSON(steps.affected-projects.outputs.affected), 'server')
        uses: dokku/github-action@master
        with:
          branch: 'main'
          git_push_flags: '--force'
          git_remote_url: 'ssh://dokku@${{ secrets.DOKKU_HOST }}:22/~/bookius-server'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy site app
        if: contains(toJSON(steps.affected-projects.outputs.affected), 'site')
        uses: dokku/github-action@master
        with:
          branch: 'main'
          git_push_flags: '--force'
          git_remote_url: 'ssh://dokku@${{ secrets.DOKKU_HOST }}:22/~/bookius-site'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
